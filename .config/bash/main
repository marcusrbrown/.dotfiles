# .bash/main - Main Bash configuration
#
# This file is sourced from ~/.profile to pull in all custom shell configurations.
#
# Large portions taken from a variety of sources, including the dotfiles repos of
# github.com/{isaacs,rtomayko,twerth,sontek} to name a few.
#

main()
{
# try to avoid polluting the global namespace with lots of garbage.
# the *right* way to do this is to have everything inside functions,
# and use the "local" keyword.  But that would take some work to
# reorganize all my old messes.  So this is what I've got for now.
__garbage_list=""
__garbage () {
  local i
  if [ $# -eq 0 ]; then
    for i in ${__garbage_list}; do
      unset $i
    done
    unset __garbage_list
  else
    for i in "$@"; do
      __garbage_list="${__garbage_list} $i"
    done
  fi
}
__garbage __garbage


##
# Path utilities.

__garbage __set_path
__set_path () {
  local var="$1"
  local orig=$(eval 'echo $'$var)
  IFS=:
  orig=($orig)
  local p="$2"

  local path_elements=($p)
  unset IFS
  p=""
  local i
  local fixed
  for i in "${orig[@]}"; do
    if [ -d "$i" ]; then
      fixed="$fixed:$i"
    fi
  done
  fixed=" ${fixed//:/ : } :"
  for i in "${path_elements[@]}"; do
    if [ -d "$i" ]; then
      p="$p:$i"
      # strip out from the original set.
      fixed=${fixed/ $i :/}
    fi
  done
  fixed=${fixed// :/:}
  fixed=${fixed//: /:}
  fixed=${fixed%:}
  p="${p/:/}:$(echo ${fixed/:/})"
  export $var="$(echo $p)"
}

__garbage __form_paths
local path_roots=( "$HOME/" "$HOME/.local/" /usr/local/ /opt/local/ /usr/ /opt/ / )
__form_paths () {
  local r p paths
  paths=""
  for p in "$@"; do
    for r in "${path_roots[@]}"; do
      paths="$paths:$r$p"
    done
  done
  echo ${paths/:/} # remove the first :
}


##
# Paths.

__set_path PATH ".:$(__form_paths bin sbin)"
__set_path LD_LIBRARY_PATH "$(__form_paths lib)"
# TODO: Needs mingw path fixup
#__set_path CLASSPATH "."
__set_path CDPATH ".:$HOME/git:$HOME/hg:$HOME/svn:$HOME"


##
# Shell and host environment.

# detect interactive shell
case "$-" in
  *i*) INTERACTIVE=yes ;;
  *)   unset INTERACTIVE ;;
esac

# detect login shell
case "$0" in
  -*) LOGIN=yes ;;
  *)  unset LOGIN ;;
esac


##
# Various shell options

if [ -n "$BASH" ]; then
  # see http://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html#The-Shopt-Builtin
  shopt -s cdspell                  # fix minor cd errors
  shopt -s checkhash                # check that a command exists in the hash table before executing it
  shopt -s checkwinsize             # update LINES and COLUMNS after each command to detect window size changes
  shopt -s expand_aliases           # expand aliases when not interactive
  shopt -s hostcomplete             # attempt hostname completion (on words containing '@')
  shopt -s nocaseglob               # case-insensitive filename match
  shopt -s no_empty_cmd_completion  # don't search PATH for command completion if the line is empty
fi


##
# Terminal

if [ -n "$REMOTE" ]; then
  # Fix the terminal when shelling in from MSYS or Cygwin.
  case "$TERM" in
    msys*)
      # TODO: Make sure the host isn't MSYS or Cygwin.
      export TERM=xterm
      ;;
  esac
fi


# List of file prefixes and extensions to ignore when doing autocomplete.
# Separate each extension with ':'.
export FIGNORE=.pyc

if [[ "$HOST_OS" == "mingw" ]]; then
  # Ignore the long and unused NTUSER.DAT{* files on Windows.
  export FIGNORE="$FIGNORE:.TM.blf:.regtrans-ms"
fi


##
# Functions and aliases

[ -f ~/.bash/functions ] && . ~/.bash/functions
[ -f ~/.bash/aliases ] && . ~/.bash/aliases


##
# Load host OS configuration

[ -f "$HOME/.bash/os_${HOST_OS}" ] && . "$HOME/.bash/os_${HOST_OS}"


##
# Initialization scripts

__garbage MAIN_BASH_INIT_DIR
MAIN_BASH_INIT_DIR=~/.bash/init.d

if [[ -d "$MAIN_BASH_INIT_DIR" && -r "$MAIN_BASH_INIT_DIR" \
      && -x "$MAIN_BASH_INIT_DIR" ]]; then
  for i in "$MAIN_BASH_INIT_DIR"/*; do
    [[ -f "$i" && -r "$i" ]] && . "$i"
  done
fi

local local_init_dir=~/.bash/local.d
if [[ -d "$local_init_dir" && -r "$local_init_dir" && -x "$local_init_dir" ]]; then
  for i in "$local_init_dir"/*; do
    [[ -f "$i" && -r "$i" ]] && . "$i"
  done
fi

unset i

# Collect local variables and functions.
__garbage
}

main
unset main

# ex: ts=2 sw=2 et filetype=sh
