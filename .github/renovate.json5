{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: ['github>marcusrbrown/renovate-config#4.2.1', 'github>sanity-io/renovate-config:semantic-commit-type'],
  customManagers: [
    {
      customType: 'regex',
      description: 'Update _VERSION variables in the global Mise config file.',
      managerFilePatterns: ['^\\.config\\/mise\\/config\\.toml$'],
      matchStrings: [
        '# renovate: datasource=(?<datasource>[a-z-.]+?)(?: depName=(?<depName>.+?))?(?: (?:packageName|lookupName)=(?<packageName>.+?))?(?: versioning=(?<versioning>[^\\s]+?))?\\s+?.+?_VERSION=(?<currentValue>.+?)\\s',
      ],
      depTypeTemplate: 'devDependencies',
      versioningTemplate: '{{#if versioning}}{{versioning}}{{else}}semver{{/if}}',
    },
    {
      // A backend installed package looks like:
      // ```toml
      // [tools]
      // "aqua:mvdan/sh" = "3.11.0"
      // "npm:vibe-tools" = "0.61.3"
      // ```
      //
      // We want to update the package by configuring the datasource, depName, and currentValue to:
      // datasource: aqua
      // depName: mvdan/sh
      // currentValue: 3.11.0
      //
      // and then map the extracted datasource to a valid Renovate datasource:
      // aqua -> github-releases
      // cargo -> crate
      // dotnet -> nuget
      // gem -> rubygems
      // pipx -> pypi
      //
      customType: 'regex',
      description: 'Update backend packages in the global Mise config file.',
      managerFilePatterns: ['^\\.config\\/mise\\/config\\.toml$'],
      matchStrings: [
        '["\']?(?<datasource>[a-z-.]+?):(?<depName>.+?)["\']?\\s*=\\s*["\']?(?<currentValue>.+?)["\']?\\s',
      ],
      datasourceTemplate: '{{#if (equals datasource "aqua")}}github-releases{{else}}{{#if (equals datasource "cargo")}}crate{{else}}{{#if (equals datasource "dotnet")}}nuget{{else}}{{#if (equals datasource "gem")}}rubygems{{else}}{{#if (equals datasource "pipx")}}pypi{{else}}{{datasource}}{{/if}}{{/if}}{{/if}}{{/if}}{{/if}}',
      depTypeTemplate: 'devDependencies',
    },
  ],
  ignorePresets: ['mergeConfidence:age-confidence-badges', 'mergeConfidence:all-badges'],
  packageRules: [
    {
      description: 'Enable patch updates for some managers.',
      matchManagers: ['devcontainer', 'dockerfile', 'docker-compose', 'mise'],
      matchUpdateTypes: ['patch'],
      enabled: true,
    },
    {
      description: 'Disable digest pinning for base images',
      matchFileNames: ['.devcontainer/Dockerfile', '**/devcontainer.json'],
      matchPackageNames: ['mcr.microsoft.com/devcontainers/base'],
      // Troubleshooting
      // pinDigests: false,
      automergeType: 'branch',
      dependencyDashboardApproval: true,
    },
  ],
  rebaseWhen: 'behind-base-branch',
}
